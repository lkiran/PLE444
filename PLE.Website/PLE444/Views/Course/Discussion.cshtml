@model PLE444.Models.Course
@{
    ViewBag.Title = "Tartışmalar";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var isCreator = ViewBag.Role == "Creator" ? true : false;
}
@{ Html.RenderAction("Navigation", "Course", new { id = Model.Id }); }

<style>
    .unreadMessage {
        background: #ffecb3;
        box-shadow: 0 0 5px 5px #ffecb3;
        box-shadow: 0 0 5px 5px rgba(255,236,179,1);
        border-radius: 2px;
    }
</style>

<div class="row">
    <div class="col-md-9">
        <div class="panel-group panel-default" id="accordionA">
            @{
                var orderedDiscussions = Model.Discussion.OrderBy(o => o.Topic);
            }
            @foreach (var discussion in orderedDiscussions.OrderByDescending(d => d.DateCreated))
            {
                var readings = discussion.Readings.FirstOrDefault(u => u.UserId == ViewBag.CurrentUserId);
                DateTime? lastRead = null;
                if (readings != null)
                {
                    lastRead = readings.Date;
                }
                var unreads = new List<PLE444.Models.Message>();
                unreads = lastRead != null ? discussion.Messages.Where(d => d.DateSent > lastRead).ToList() : discussion.Messages.ToList();
                unreads = unreads.Except(discussion.Messages.Where(u => u.SenderId == ViewBag.CurrentUserId).ToList()).ToList();

                <div class="panel panel-default">
                    <a data-toggle="collapse" data-parent="#accordionA" DiscussionId="@discussion.ID" class="Discussion" href="#@discussion.ID">
                        <div class="panel-heading" id="scroll">

                            <h2>@discussion.Topic</h2>
                            <span class="m-md"> @*@discussion.Creator.FullName()*@ 
                            tarafından oluşturuldu</span>
                            <div class="pull-right">
                                @if (discussion.Readings.Count != 0)
                                {
                                    <span>@discussion.Readings.Count kişi okudu</span>
                                }

                                @if (unreads.Count != 0)
                                {
                                    <span class="badge badge-warning">@unreads.Count okunmamış</span>
                                }
                            </div>
                        </div>
                    </a>
                    <div id="@discussion.ID" class="collapse">
                        <div class="panel-body">
                            <div class="message">
                                
                                    @if (ViewBag.CurrentUserId == null)
                                    {
                                        <p>Mesaj yollamak için yapın</p>
                                    }
                                    else
                                    {
                                        @Html.Partial("SendMessage", new PLE444.Models.Message(), new ViewDataDictionary { { "DiscussionId", discussion.ID } ,
                                        { "CourseId", Model.Id } ,
                                        { "CurrentUserId", ViewBag.CurrentUserId } })
                                    }
                                
                                    @if (isCreator)
                                    {
                                        <a href="@Url.Action("RemoveTitle", "Course", new {discussionId = discussion.ID, courseId = Model.Id})">
                                            <small class="text-danger">Başlığı Sil</small>
                                        </a>
                                    }
                                
                            </div>

                            <hr>

                            @{
                                string PrevUserId = "";
                                var orderedMessages = discussion.Messages.OrderBy(o => o.DateSent);
                                foreach (var message in orderedMessages.OrderByDescending(m => m.DateSent))
                                {
                                    var dh = new PLE444.Helpers.DataManipulationHelper();
                                    var isOwner = ViewBag.CurrentUserId == message.SenderId ? true : false;

                                    <div class="message">
                                        @if (message.SenderId != PrevUserId)
                                        {
                                            <a href="@Url.Action("Profil","User", new {id = message.SenderId})">
                                                <img class="img-circle" style="width:40px" src="@Url.Content(message.Sender.UserPhoto())" />
                                                <strong style="margin-left:10px;">@message.Sender.FullName()</strong>
                                            </a>
                                            <br>
                                        }
                                        <div class="pull-right">
                                            <a href="#scroll">Cevapla</a>

                                            @if (isOwner || isCreator)
                                            {
                                                <a href="@Url.Action("RemoveMessage", "Course", new {messageId = message.ID, courseId = Model.Id})">
                                                    <small class="text-danger">Kaldır</small>
                                                </a>
                                            }

                                            <small>@dh.GetDeltaDate(message.DateSent)</small>
                                        </div>

                                        @if (unreads.FirstOrDefault(i => i.ID == message.ID) == null)
                                        {
                                            <div style="margin-left:50px;">@(new HtmlString(message.Content))</div>
                                        }
                                        else
                                        {
                                            <div class="unreadMessage" style="margin-left:50px;">@(new HtmlString(message.Content))</div>
                                        }

                                    </div>

                                    PrevUserId = message.SenderId;
                                }

                            }

                        </div>
                    </div>
                </div>
                                }
        </div>
    </div>

    <div class="col-md-3">
        <a href="@Url.Action("AddTitle", new {id = Model.Id})" class="btn btn-primary-alt btn-lg btn-block">
            <i class="fa fa-plus fa-bold"></i> Başlık Ekle
        </a>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script>
$(document).ready(function(){
  // Add smooth scrolling to all links
  $("a").on('click', function(event) {

    // Make sure this.hash has a value before overriding default behavior
    if (this.hash !== "") {
      // Prevent default anchor click behavior
      event.preventDefault();

      // Store hash
      var hash = this.hash;

      // Using jQuery's animate() method to add smooth page scroll
      // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area
      $('html, body').animate({
        scrollTop: $(hash).offset().top
      }, 800, function(){

        // Add hash (#) to URL when done scrolling (default click behavior)
        window.location.hash = hash;
      });
    } // End if
  });
});
</script>

<script src="http://code.jquery.com/jquery-3.1.0.min.js"></script>

<script>
    var debugging = false;
    $('.Discussion').click(function () {
        $.ajax({
            url: '@Url.Action("Read","Course")',
            dataType: 'json',
            type: 'POST',
            data: "DiscussionId=" + $(this).attr('DiscussionId') + "&CourseId=" + "@Model.Id",


            success: function (data) {
                if (debugging)
                    alert(data.success);
            },
            error: function () {
                if (debugging)
                    alert("error");
            }
        });
    });
</script>

