@model PLE444.ViewModels.CourseAssignments
@{
	ViewBag.Title = "Ödevler";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var h = new PLE444.Helpers.DataManipulationHelper();
	var fh = new PLE444.Helpers.FileHelper();
}

@{ Html.RenderAction("Navigation", "Course", new { id = Model.CourseInfo.Id }); }

@if (!Model.AssignmentList.Any()) {
	<div class="alert alert-dismissable alert-info">
		<i class="ti ti-info-alt lead"></i> Bu derse eklenmiş herhangi bir ödev henüz yok.
	</div>
}

@if (Model.CanEdit && Model.CourseInfo.IsCourseActive == true){
	<a href="@Url.Action("Create", "Assignment", new{id = Model.CourseInfo.Id})" class="btn btn-primary-alt center-block">
		<i class="fa fa-plus"></i> Yeni Ödev Ekle
	</a>
}

<div class="panel-default" id="accordionA">
	@foreach (var assignment in Model.AssignmentList.OrderByDescending(a => a.DateAdded)) {
		var userUpload = assignment.Uploads.FirstOrDefault(u => u.OwnerId == Model.CurrentUserId);
		var isUploded = userUpload != null;

		var panelColor = "default";
		var message = "Yükleme bekliyor";

		if (!Model.CanEdit) {
			if (isUploded) {
				var isLateUpload = userUpload.DateUpload > assignment.Deadline;
				panelColor = isLateUpload ? "warning" : "success";
				message = isLateUpload ? "Teslim tarihinden sonra yüklendi" : "Yüklendi";
			}
			else {
				if (DateTime.Now > assignment.Deadline) {
					panelColor = "danger";
					message = "Teslim tarihi geçti ve yüklenmedi";
				}
			}
		}
		<div class="panel panel-@panelColor">
			<div class="panel-heading" style="cursor: pointer" data-toggle="collapse" data-parent="#accordionA" class="Assignment" href="#@assignment.Id">

				<h2>@assignment.Title</h2>

			
				<div class="pull-right" title="@assignment.DateAdded">
					@h.GetDeltaDate(assignment.DateAdded)
				</div>
			</div>


			<div id="@assignment.Id" class="collapse">
				<div class="panel-body">
					<p>@(new HtmlString(assignment.Description))</p>

					@if (assignment.IsFeedbackPublished && userUpload != null && !string.IsNullOrEmpty(userUpload.Feedback)) {
						<strong class="text-info">Geri Bildirim</strong>
						<p class="text-info">@userUpload.Feedback</p>
					}

					<hr />

					<table class="table m-n ">
						<thead></thead>

						@if (Model.CanEdit && assignment.Uploads.Count > 0) {
							foreach (var upload in assignment.Uploads.OrderBy(u => u.Owner.FullName())) {
								<tbody>
									<tr>
										<td>
											<img class="img-circle" src="@Url.Content(upload.Owner.UserPhoto())" style="height: 30px;" />
											<span>@upload.Owner.FullName()</span>
										</td>

										<td>
											<a href="@Url.Action("Download", "File", new {path = Url.Content(upload.FilePath), name = Url.Content(upload.Description) })">
												<img src="@Url.Content(fh.GetFileIcon(upload.FilePath))" style="height: 30px;" />
												<span>@upload.Description</span>
											</a>
										</td>

										<td> @upload.DateUpload, @h.GetDeltaDate(upload.DateUpload)</td>

										<td>
											@if (Model.CourseInfo.IsCourseActive == true)
											{
												using (Html.BeginForm("Feedback", "Assignment", FormMethod.Post))
												{
													@Html.AntiForgeryToken()
													<input name="feedback" id="feedback" type="text" value="@upload.Feedback" />
													<input type="hidden" name="uploadId" id="uploadId" value="@upload.Id">
													<input class="btn btn-primary-alt pull-right mr-md" type="submit" value="Gönder" />
												}
											}

											else
											{
												<p>@upload.Feedback</p>
											}

										</td>
									</tr>
								</tbody>
							}
						}
					</table>
				</div>

				<div class="panel-footer">
					@if (Model.CanEdit)
					{
						if (Model.CourseInfo.IsCourseActive == true)
						{
							<div class="panel-ctrls" style="float: left">
								<a class="button-icon ml-sm" title="Düzenle" href="@Url.Action("Edit", "Assignment", new {id = assignment.Id, courseId = Model.CourseInfo.Id})">
									<i class="ti ti-pencil"></i>
								</a>

								<a title="Kaldır" data-assignment-id="@assignment.Id" class="btn-remove button-icon ml-sm">
									<i class="ti ti-trash"></i>
								</a>

								@if (assignment.IsFeedbackPublished == false)
								{
									<a class="button-icon ml-sm" title="Geri Bildirimi Yayınla" href="@Url.Action("Publish", "Assignment", new {assignmentId = assignment.Id, courseId = Model.CourseInfo.Id})">
										<i class="ti ti-announcement"></i>
									</a>
								}
								else
								{
									<a class="button-icon ml-sm " title="Geri Bildirimi Yayından Kaldır" href="@Url.Action("Publish", "Assignment", new {assignmentId = assignment.Id, courseId = Model.CourseInfo.Id})">
										<i class="ti ti-announcement text-danger"></i>
									</a>
								}
							</div>
						}

					}

					else
					{
						<small class="ml-md text">@message</small>

						if (userUpload != null)
						{
							<div class="panel-ctrls" style="float:left">
								<a class="button-icon ml-sm" title="Yüklenen Ödevi İndir" href="@Url.Action("Download", "File", new {path = userUpload.FilePath, name = userUpload.Description})">
									<i class="ti ti-download"></i>
								</a>
							</div>
					}
				}
					@if (Model.CanEdit) {
						<a href="@Url.Action("DownloadAssignment", "Assignment", new {asssignmentId = assignment.Id})" class="pull-right">
							<img src="@Url.Content("~/Content/img/FileIcons/zip.png")" alt="zip" style="height: 30px;" />
							<span> Hepsini İndir</span>
						</a>
					}
					else if (Model.CanUpload) {
						using (Html.BeginForm("Upload", "Assignment", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" })) {
							@Html.AntiForgeryToken()
							<input class="btn btn-primary-alt pull-right mr-md" type="submit" value="Yükle" />

							<input class="pull-right filer_input" name="uploadFile" type="file" id="uploadFile" />
							<input type="hidden" name="assignmentId" id="assignmentId" value="@assignment.Id">
					}
				}
					<span class="ml-md">Teslim Tarihi: @assignment.Deadline</span>
				</div>
			</div>
		</div>
	}
</div>

@section scripts
{
	<script>
		$(document).ready(function () {
			$(".btn-remove").on("click", function () {

				var object = $(this);

				bootbox.confirm({
					title: "Onay",
					message: "Ödevi kaldırmak istediğinize emin misiniz?",
					buttons: {
						confirm: {
							label: 'Evet, Kaldır',
							className: 'btn-danger-alt'
						},
						cancel: {
							label: 'Hayır',
							className: 'btn-info-alt'
						}
					},
					size: "small",
					callback: function (result) {
						if (result) {
							$.ajax({
								url: "@Url.Action("Delete", "Assignment")" + "/" + object.data('assignment-id'),
								method: "POST",
								dataType: 'json',
								success: function (response) {
									object.parent("div").parent("div").parent("div").slideUp();
								},
								error: function (response) {
									console.log(response);
								}
							});
						}

					}
				});
			});

			$('.filer_input').each(function () {
				$(this).filer({
					captions: {
						button: "Seç",
						feedback: "Hiç dosya seçilmedi",
						feedback2: "dosya seçildi"
					}
				});
			});

			$('.jFiler-input').each(function () {
				$(this).addClass("pull-right");
			});
		});
	</script>
}