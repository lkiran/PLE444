@using Microsoft.Ajax.Utilities
@using PLE444.Models
@model  PLE444.ViewModels.CourseGrades

@{
    ViewBag.Title = "Notlar";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}

@{ Html.RenderAction("Navigation", "Course", new { id = Model.CourseInfo.ID }); }

<div class="panel panel-default" data-widget='{"draggable": "false"}'>
    <div class="panel-heading">
   
        <div class="panel-ctrls" data-actions-container="" data-action-collapse='{"target": ".panel-body"}'></div>
    </div>
    <div class="panel-body">
        <table class="table table-hover m-n">
            <thead>
                <tr>                   
                    <th></th>
                    @foreach (var gradeType in Model.GradeTypes)
                    {
                        <th class="text-center" title="@gradeType.Description
Ağırlık: @(gradeType.Effect*100)%
Max Score: @gradeType.MaxScore">
                            
                            @if (Model.CanEdit)
                            {
                                <a href="@Url.Action("EditGradeType", "Course", new {id = gradeType.Id})">@gradeType.Name</a>
                            }
                            else
                            {
                                <span>@gradeType.Name </span>
                            }
                        </th>
                    }
                    <th class="text-center">Toplam</th>
                </tr>
            </thead>
            <tbody>                
                @foreach (var user in Model.Users)
                {
                    var totalUserScore = 0f;

                    <tr>
                        <td><a href="@Url.Action("Profil", "User", new {id = user.Id})">
                                
                                <img alt="Kullanıcı Resmi" src="@user.UserPhoto()" class="img-circle" style="height: 30px;"/>
                                @user.FullName()
                            </a>
                        </td>
                        
                        @{ var gradesOfTheUser = Model.UserGrades.Where(u => u.UserId == user.Id).ToList(); }

                        @foreach (var gradeType in Model.GradeTypes)
                        {
                            var userGrade = gradesOfTheUser.FirstOrDefault(g => g.GradeTypeId == gradeType.Id);

                            <td class="text-center">
                                @if (userGrade == null)
                                {
                                    if (Model.CanEdit)
                                     {
                                        <a href="@Url.Action("AddGrade", "Course", new { gradeTypeId= gradeType.Id, userId = user.Id })"> - </a>
                                    }
                                    else
                                    {
                                        <span> - </span>
                                    }
                                }
                                else
                                {
                                    totalUserScore += (userGrade.Grade * gradeType.Effect / 100f);

                                    if (Model.CanEdit)
                                    {
                                        <a href="@Url.Action("ChangeGrade", "Course", new {gradeId = userGrade.Id})"> @userGrade.Grade </a>
                                    }
                                    else
                                    {
                                        <span> @userGrade.Grade </span>
                                    }
                                    
                                }
                            </td>
                        }
                        <td class="text-center">@(Math.Round((totalUserScore),2))</td>
                    </tr>
                }
            </tbody>
        </table>
    
        
    </div>
</div>

@if (Model.CanEdit)
{
    <a href="@Url.Action("CreateGradeType",new { id = Model.CourseInfo.ID })" class="btn btn-primary-alt" id="dyna-del">Not Türü Ekle</a>
}