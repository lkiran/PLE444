@model PLE444.ViewModels.Chapters

@{
    ViewBag.Title = "Bölümler";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{ Html.RenderAction("Navigation", "Course", new {id = Model.CourseInfo.Id}); }

@if (Model != null)
{
    if (!Model.ChapterList.Any())
    {
        <div class="alert alert-dismissable alert-info">
            <i class="ti ti-info-alt lead"></i>  Bu derse eklenmiş herhangi bir bölüm henüz yok.
        </div>
    }
    foreach (var chapter in Model.ChapterList.OrderByDescending(d => d.DateAdded))
    {
        <div class="panel panel-default" id="panel">
            <div class="panel-heading"> 
                    
                <h2>@Html.DisplayFor(modelItem => chapter.Title)</h2>
                @if (Model.canEdit)
                {
                    <a href="@Url.Action("Edit","Chapter", new {id = chapter.Id})">
                        <small><i class="fa fa-pencil-square-o ml-lg mr-xs"></i><span class="visible-lg visible-md">Düzenle</span></small>
                    </a>
                    <button data-chapter-id="@chapter.Id" class="btn-remove btn-link">
                        <small class="text-danger"><i class="fa fa-trash-o ml-xs mr-xs"></i><span class="visible-lg visible-md">Kaldır</span></small>
                    </button>
                }
                <div class="not-pull-right-xs text-xs-center">
                    @Html.DisplayFor(modelItem => chapter.DateAdded), @{var h = new PLE444.Helpers.DataManipulationHelper(); }
                    @h.GetDeltaDate(chapter.DateAdded)
                </div>
            </div>

            <div class="panel-body">
                @(new HtmlString(chapter.Description))

                <ul style="list-style-type: none" ;>
                    @foreach (var material in chapter.Materials)
                    {
                        <li>
                            <a class="ShowModal" href="#_" data-href="@Url.Action("Detail", "Material", new { id= material.Id })" data-toggle="modal" data-target="#myModal">     
                                @material.Title                          
                            </a>
                        </li>
                    }
                </ul>
            </div>
            @if (Model.canEdit)
            {               
                <div class="panel-footer">
                    <div class="pull-right">
                        <a href="@Url.Action("Add", "Material", new {chapterId = chapter.Id})" class="btn btn-primary-alt btn-sm ">
                            <i class="fa fa-plus"></i> Materyal Ekle
                        </a>
                    </div>
                </div>
            }
        </div>
    }
}
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="text-center">
            <i class="fa fa-circle-o-notch fa-spin" style="font-size: 50px; color: white;"></i>
        </div>
    </div>
</div>

@if(Model.canEdit)
{
    <a href="@Url.Action("Create", "Chapter", new {id = Model.CourseInfo.Id})" class="btn btn-primary-alt center-block" id="dyna-del">
        <i class="fa fa-plus"></i> Yeni Bölüm Ekle
    </a>
}

@section scripts
{
    <script>
        $(document).ready(function() {
            $(".btn-remove").on("click", function () {

                var object = $(this);

                bootbox.confirm({
                    title: "Onay",
                    message: "Bölümü kaldırmak istediğinize emin misiniz?",
                    buttons: {
                        confirm: {
                            label: 'Evet, Kaldır',
                            className: 'btn-danger-alt'
                        },
                        cancel: {
                            label: 'Hayır',
                            className: 'btn-info-alt'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: "/Chapter/Delete/" + object.data('chapter-id'),
                                method: "POST",
                                dataType: 'json',
                                success: function(response) {
                                    object.parent("div").parent("div").slideUp();
                                },
                                error: function (response) {
                                    console.log(response);
                                }
                            });
                        }

                    }
                });
            });

            $(".ShowModal").on("click", function (e) {
                e.preventDefault();
                $.ajax({
                    //RemoveFromChapter(Guid? chapterId, Guid? materialId)
                    url: $(this).data("href"),
                    method: "GET",
                    dataType: 'json',
                    success: function (response) {
                        $(".modal-dialog").html(response.responseText);
                    },
                    error: function (response) {
                        $(".modal-dialog").html(response.responseText);
                    }
                });
                
            });
        });
    </script>
}



